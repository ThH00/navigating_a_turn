
beta = pi/3;
m1 = 1;
m2 = 1;
l = 1;

% solving for the u-coordinates
tspan = [0 10];
y0 = [0,0,0,1,0.1];
[t,y] = ode45(@(t,y) GAeom(t,y,beta,m1,m2,l), tspan, y0);


figure()
hold on

animation = VideoWriter('sleigh_angled.mp4', 'MPEG-4');
animation.FrameRate = 10;
open(animation);

axis([min(y(:,1)), max(y(:,1)), min(y(:,2)), max(y(:,2))])

for i = 1:length(t)

    r1 = [y(i,1),y(i,2)];
    e1 = cos()


    particle1 = plot(y(i,1),y(i,2),'Marker','o','LineWidth',2,'Color','k');
    
    particle2 = 


    drawnow
    pause(0.01)
    writeVideo(animation, getframe(gcf))

    delete(particle1)


end
close(animation)





figure()
hold on
plot(y(:,1))
title('x')

figure()
hold on
plot(y(:,2))
title('y')

figure()
hold on
plot(y(:,3))
title('theta')

figure()
hold on
plot(y(:,1),y(:,2))
title('x vx y')

% % solving for the x-coordinates
% H = [cos(beta + theta)/cos(beta), -l*sin(theta)*tan(beta), -sin(theta);
%     sin(beta + theta)/cos(beta),  l*cos(theta)*tan(beta),  cos(theta);
%     0, 1, 0];



function dydt = GAeom(t,y,beta,m1,m2,l)
    dydt = zeros(5,1);
    % y1=x, y2=y, y3=theta, y4=u1, y5=u2
    % the components of the matrix H relate the derivatives of x, y, and
    % thera to u1, u2, and u3
    dydt(1) = cos(beta + y(3))/cos(beta)*y(4)+l*sin(y(3))*y(5); 
    dydt(2) = sin(beta + y(3))/cos(beta)*y(4)-l*cos(y(3))*y(5);
    dydt(3) = y(5);
    dydt(4) = (y(5)*(m1*cos(beta) + m2*cos(beta) + m2*sin(beta))*(2*m2*cos(beta)^2*y(4) - m1*sin(2*beta)*y(4) - m2*sin(2*beta)*y(4) + 2*l*m1*cos(beta)^2*y(5) + 4*l*m2*cos(beta)^2*y(5)))/(2*m1^2*cos(beta) - 2*m2^2*cos(beta)^3 + 4*m2^2*cos(beta) + m2^2*sin(2*beta)*cos(beta) + 2*m2^2*cos(beta)^2*sin(beta) - m1^2*sin(2*beta)*sin(beta) - m2^2*sin(2*beta)*sin(beta) + 6*m1*m2*cos(beta) + m1*m2*sin(2*beta)*cos(beta) + 2*m1*m2*cos(beta)^2*sin(beta) - 2*m1*m2*sin(2*beta)*sin(beta));
    dydt(5) = -(2*y(5)*(m1*cos(beta) + m2*cos(beta) + m2*sin(beta))*(m1*y(4) + m2*y(4) + l*m2*cos(beta)^2*y(5) - l*m1*cos(beta)*sin(beta)*y(5) - l*m2*cos(beta)*sin(beta)*y(5)))/(2*l*m1^2*cos(beta) + 4*l*m2^2*cos(beta) - 2*l*m2^2*cos(beta)^3 + 6*l*m1*m2*cos(beta) + l*m2^2*sin(2*beta)*cos(beta) + 2*l*m2^2*cos(beta)^2*sin(beta) - l*m1^2*sin(2*beta)*sin(beta) - l*m2^2*sin(2*beta)*sin(beta) + l*m1*m2*sin(2*beta)*cos(beta) + 2*l*m1*m2*cos(beta)^2*sin(beta) - 2*l*m1*m2*sin(2*beta)*sin(beta));
end

% we still need to plot r2